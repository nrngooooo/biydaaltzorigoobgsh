// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using biydaalt.Models;

#nullable disable

namespace biydaalt.Migrations
{
    [DbContext(typeof(Nomiinsanctx))]
    [Migration("20240423073542_biydaalt")]
    partial class biydaalt
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("biydaalt.Models.Albantushaal", b =>
                {
                    b.Property<int>("albantushaalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("albantushaalId"));

                    b.Property<string>("albantushaalName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("albantushaalId");

                    b.ToTable("Albantushaals");
                });

            modelBuilder.Entity("biydaalt.Models.Book", b =>
                {
                    b.Property<int>("bookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("bookId"));

                    b.Property<string>("author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bookName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("book_count")
                        .HasColumnType("int");

                    b.Property<int>("dedTurulId")
                        .HasColumnType("int");

                    b.Property<int>("page_count")
                        .HasColumnType("int");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<string>("pub_company")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("pub_date")
                        .HasColumnType("date");

                    b.Property<int>("turulId")
                        .HasColumnType("int");

                    b.Property<int>("workerId")
                        .HasColumnType("int");

                    b.HasKey("bookId");

                    b.HasIndex("dedTurulId");

                    b.HasIndex("turulId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("biydaalt.Models.Bookact", b =>
                {
                    b.Property<int>("bookactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("bookactId"));

                    b.Property<int>("act_count")
                        .HasColumnType("int");

                    b.Property<DateOnly>("actdate")
                        .HasColumnType("date");

                    b.Property<string>("actshaltgaan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("bookId")
                        .HasColumnType("int");

                    b.Property<int>("workerId")
                        .HasColumnType("int");

                    b.HasKey("bookactId");

                    b.HasIndex("bookId");

                    b.HasIndex("workerId");

                    b.ToTable("Bookacts");
                });

            modelBuilder.Entity("biydaalt.Models.Bookgive", b =>
                {
                    b.Property<int>("bookgiveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("bookgiveId"));

                    b.Property<int>("bookId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("enterdate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("retdate")
                        .HasColumnType("date");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.Property<int>("workerId")
                        .HasColumnType("int");

                    b.HasKey("bookgiveId");

                    b.HasIndex("bookId");

                    b.HasIndex("userId");

                    b.HasIndex("workerId");

                    b.ToTable("Bookgives");
                });

            modelBuilder.Entity("biydaalt.Models.Dedturul", b =>
                {
                    b.Property<int>("dedTurulId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("dedTurulId"));

                    b.Property<string>("dedTurulName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("turulId")
                        .HasColumnType("int");

                    b.HasKey("dedTurulId");

                    b.HasIndex("turulId");

                    b.ToTable("DedTuruls");
                });

            modelBuilder.Entity("biydaalt.Models.Department", b =>
                {
                    b.Property<int>("departmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("departmentId"));

                    b.Property<string>("departmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("departmentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("biydaalt.Models.Torguuli", b =>
                {
                    b.Property<int>("torguuliId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("torguuliId"));

                    b.Property<int>("ashigodor")
                        .HasColumnType("int");

                    b.Property<int>("bookId")
                        .HasColumnType("int");

                    b.Property<int>("torguulihemje")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.Property<int>("workerId")
                        .HasColumnType("int");

                    b.HasKey("torguuliId");

                    b.HasIndex("bookId");

                    b.HasIndex("userId");

                    b.HasIndex("workerId");

                    b.ToTable("Torguulis");
                });

            modelBuilder.Entity("biydaalt.Models.Turul", b =>
                {
                    b.Property<int>("turulId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("turulId"));

                    b.Property<string>("turulName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("turulId");

                    b.ToTable("Turuls");
                });

            modelBuilder.Entity("biydaalt.Models.User", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userId"));

                    b.Property<int>("phone")
                        .HasColumnType("int");

                    b.Property<string>("regdug")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("biydaalt.Models.Worker", b =>
                {
                    b.Property<int>("workerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("workerId"));

                    b.Property<int>("albantushaalId")
                        .HasColumnType("int");

                    b.Property<int>("departmentId")
                        .HasColumnType("int");

                    b.Property<int>("phone")
                        .HasColumnType("int");

                    b.Property<string>("regdug")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("workerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("workerId");

                    b.HasIndex("albantushaalId");

                    b.HasIndex("departmentId");

                    b.ToTable("Workers");
                });

            modelBuilder.Entity("biydaalt.Models.Book", b =>
                {
                    b.HasOne("biydaalt.Models.Dedturul", "dedturuluud")
                        .WithMany()
                        .HasForeignKey("dedTurulId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("biydaalt.Models.Turul", "turuluud")
                        .WithMany()
                        .HasForeignKey("turulId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("dedturuluud");

                    b.Navigation("turuluud");
                });

            modelBuilder.Entity("biydaalt.Models.Bookact", b =>
                {
                    b.HasOne("biydaalt.Models.Book", "book")
                        .WithMany()
                        .HasForeignKey("bookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("biydaalt.Models.Worker", "worker")
                        .WithMany()
                        .HasForeignKey("workerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("book");

                    b.Navigation("worker");
                });

            modelBuilder.Entity("biydaalt.Models.Bookgive", b =>
                {
                    b.HasOne("biydaalt.Models.Book", "book")
                        .WithMany()
                        .HasForeignKey("bookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("biydaalt.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("biydaalt.Models.Worker", "worker")
                        .WithMany()
                        .HasForeignKey("workerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("book");

                    b.Navigation("user");

                    b.Navigation("worker");
                });

            modelBuilder.Entity("biydaalt.Models.Dedturul", b =>
                {
                    b.HasOne("biydaalt.Models.Turul", "turul")
                        .WithMany()
                        .HasForeignKey("turulId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("turul");
                });

            modelBuilder.Entity("biydaalt.Models.Torguuli", b =>
                {
                    b.HasOne("biydaalt.Models.Book", "book")
                        .WithMany()
                        .HasForeignKey("bookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("biydaalt.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("biydaalt.Models.Worker", "worker")
                        .WithMany()
                        .HasForeignKey("workerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("book");

                    b.Navigation("user");

                    b.Navigation("worker");
                });

            modelBuilder.Entity("biydaalt.Models.Worker", b =>
                {
                    b.HasOne("biydaalt.Models.Albantushaal", "albantushaal")
                        .WithMany()
                        .HasForeignKey("albantushaalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("biydaalt.Models.Department", "department")
                        .WithMany()
                        .HasForeignKey("departmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("albantushaal");

                    b.Navigation("department");
                });
#pragma warning restore 612, 618
        }
    }
}
